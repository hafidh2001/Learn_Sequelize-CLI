1. npm init -y (package.json) + set "type":"module"

2. npm i express cors pg sequelize dotenv (dep)

3. npm i --save-dev nodemon sequelize-cli (dev-dep)

4. show optional arguments sequelize-cli
   - npx sequelize-cli -h, --help

5. npx sequelize init (generate direktori config, models, migrations, seeders)
    - config : konfigurasi database + environment
    - models : validasi, perintah query, pengaturan table, fitur hooks 
    - migrations : keperluan migrasi table ke database
    - seeders : seeding data / input data sesuai yang ditentukan pada suatu table

6. touch .env (create confidential key)

7. modify database's config for development in config/config.json 
  "development": {
    "username": "postgres",
    "password": "sql2001",
    "database": "db_sequelize-cli",
    "host": "localhost",
    "port": 5432,
    "dialect": "postgres"
  },

8. Create database specified by configuration (database name from key database in object development config)
   npx sequelize db:create

9. Create Model Photo with attribute
   - if type:module, dont forget to change require() to import in path models/index.js before run this command :
   npx sequelize model:generate --name Photo --attributes title:string,caption:string,image_url:text
   - if type:module, dont forget to change require() to import in path models/modelName.js

10. Run Pending migrations
   - if type:module, dont forget to change extension of file migration from .js to .cjs before run this command :
   npx sequelize db:migrate

11. Create Seeder data to Model Photo
   npx sequelize seed:generate --name seeding_photo_datas

2. Run Seeder data
   if type:module, dont forget to change extension of file migration from .js to .cjs before run this command :
   - for specified file :
     npx sequelize db:seed --seed 20221015035819-seeding_photo_datas.cjs
   - for seed all :
     npx sequelize db:seed:all